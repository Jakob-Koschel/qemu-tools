version: '3'

tasks:
  qemu:
    desc: run image in qemu
    env:
      ARCH: 'x86_64'
      # ARCH: 'aarch64'
      IMAGE: 'out/bullseye.img'
    cmds:
      - scripts/run-qemu.sh

  create-image:
    desc: create syzkaller image
    env:
      IMAGE: 'out/bullseye.img'
      DIR: 'out/mnt'
    vars:
      ARCH: 'x86_64'
      GRUB_TARGET: 'x86_64'
      # ARCH: 'aarch64'
      # GRUB_TARGET: 'arm64'
      DISTRIBUTION: 'bullseye'
    cmds:
      - mkdir -p out
      - scripts/create-image.sh --arch {{.ARCH}} --distribution {{.DISTRIBUTION}}
      - task: enter-mount-chroot
        vars:
          CLI_ARGS: 'grub-mkconfig -o /boot/grub/grub.cfg'
      # - task: enter-mount-chroot
      #   vars:
      #     CLI_ARGS: 'grub-install $LOOP_DEV'
      - task: enter-mount-chroot
        vars:
          CLI_ARGS: 'grub-install --target={{.GRUB_TARGET}}-efi --force-extra-removable --no-nvram --no-floppy --modules="part_msdos part_gpt" --grub-mkdevicemap=/boot/grub/device.map $LOOP_DEV'
      - task: enter-mount-chroot
        vars:
          CLI_ARGS: 'update-grub'

  mount-image:
    desc: mount a image using a loop device
    env:
      IMAGE: 'out/bullseye.img'
      MNT: 'out/mnt'
      COMMAND: '{{.CLI_ARGS}}'
    cmds:
      - scripts/mount-image.sh

  enter-chroot:
    desc: enter a chroot environment
    env:
      DIR: 'out/mnt'
    cmds:
      - bash scripts/enter-chroot.sh "{{.CLI_ARGS}}"

  enter-mount-chroot:
    desc: enter a chroot within an image
    cmds:
      - task: mount-image
        vars:
          CLI_ARGS: "task enter-chroot -- {{.CLI_ARGS}}"

  chroot-cmd:
    desc: run command within chroot
    cmds:
      - task: enter-chroot
